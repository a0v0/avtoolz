{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {defineDocumentType, defineNestedType, makeSource} from \"contentlayer/source-files\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeSlug from \"rehype-slug\";\nimport {visit} from \"unist-util-visit\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n  },\n  url: {type: \"string\", resolve: (doc) => `/${doc._raw.flattenedPath}`},\n}\n\n\nexport const Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: `docs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {type: \"string\", required: true},\n    description: {type: \"string\", required: false},\n    date: {type: \"date\", required: false},\n  },\n  computedFields\n}));\n\n\nconst AuthorProperties = defineNestedType(() => ({\n  name: \"AuthorProperties\",\n  fields: {\n    name: {type: \"string\", required: true},\n    link: {type: \"string\", required: false},\n    avatar: {type: \"string\", required: false},\n    username: {type: \"string\", required: false},\n  }\n}));\n\nexport const BlogPost = defineDocumentType(() => ({\n  name: \"BlogPost\",\n  filePathPattern: `blog/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {type: \"string\", required: true},\n    description: {type: \"string\", required: true},\n    date: {type: \"date\", required: true},\n    tags: { type: 'list', of: { type: 'string' } },\n    author: {type: \"nested\",of: AuthorProperties, required: false},\n    image: {type: \"string\", required: false},\n  },\n  computedFields: {\n    ...computedFields,\n    // Date format June 22nd 2023\n    formattedDate: {\n      type: \"string\",\n      resolve: (doc) => {\n        const date = new Date(doc.date);\n        const options = {year: \"numeric\", month: \"long\", day: \"numeric\"};\n        return date.toLocaleDateString(\"en-US\", options);\n      }\n    },\n    // add https://nextui.org to the image path\n    imageAsParams: {\n      type: \"string\",\n      resolve: (doc) => {\n        const image = doc.image;\n        if (image) {\n          return `https://nextui.org${image}`;\n        }\n      }\n    }\n  }\n}));\n\nexport default makeSource({\n  contentDirPath: \"./content\",\n  documentTypes: [Doc, BlogPost],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      () => (tree) => {\n        visit(tree, \"element\", (node) => {\n          if (node.tagName === \"code\" && node.data && node.data.meta) {\n            node.properties.meta = node.data.meta;\n          }\n        });\n      },\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAQ,oBAAoB,kBAAkB,kBAAiB;AAC/D,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,SAAQ,aAAY;AAGpB,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AAAA,EACA,KAAK,EAAC,MAAM,UAAU,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa,GAAE;AACtE;AAGO,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IACtC,aAAa,EAAC,MAAM,UAAU,UAAU,MAAK;AAAA,IAC7C,MAAM,EAAC,MAAM,QAAQ,UAAU,MAAK;AAAA,EACtC;AAAA,EACA;AACF,EAAE;AAGF,IAAM,mBAAmB,iBAAiB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,MAAM,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IACrC,MAAM,EAAC,MAAM,UAAU,UAAU,MAAK;AAAA,IACtC,QAAQ,EAAC,MAAM,UAAU,UAAU,MAAK;AAAA,IACxC,UAAU,EAAC,MAAM,UAAU,UAAU,MAAK;AAAA,EAC5C;AACF,EAAE;AAEK,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IACtC,aAAa,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IAC5C,MAAM,EAAC,MAAM,QAAQ,UAAU,KAAI;AAAA,IACnC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC7C,QAAQ,EAAC,MAAM,UAAS,IAAI,kBAAkB,UAAU,MAAK;AAAA,IAC7D,OAAO,EAAC,MAAM,UAAU,UAAU,MAAK;AAAA,EACzC;AAAA,EACA,gBAAgB;AAAA,IACd,GAAG;AAAA;AAAA,IAEH,eAAe;AAAA,MACb,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,cAAM,OAAO,IAAI,KAAK,IAAI,IAAI;AAC9B,cAAM,UAAU,EAAC,MAAM,WAAW,OAAO,QAAQ,KAAK,UAAS;AAC/D,eAAO,KAAK,mBAAmB,SAAS,OAAO;AAAA,MACjD;AAAA,IACF;AAAA;AAAA,IAEA,eAAe;AAAA,MACb,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,cAAM,QAAQ,IAAI;AAClB,YAAI,OAAO;AACT,iBAAO,qBAAqB,KAAK;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,KAAK,QAAQ;AAAA,EAC7B,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA,MAAM,CAAC,SAAS;AACd,cAAM,MAAM,WAAW,CAAC,SAAS;AAC/B,cAAI,KAAK,YAAY,UAAU,KAAK,QAAQ,KAAK,KAAK,MAAM;AAC1D,iBAAK,WAAW,OAAO,KAAK,KAAK;AAAA,UACnC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
