name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [22]

    name: E2E tests with node@${{ matrix.node_version }}
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: graphicsmagick ghostscript
          version: 1.0

      # Setup pnpm package manager
      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      # Setup Node.js environment
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: "pnpm"

      # Cache dependencies to speed up workflow
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # Install project dependencies
      - name: Install Dependencies
        run: pnpm install

      # Build the Next.js application
      - name: Build Next.js Application
        run: pnpm build

      # Install Playwright for end-to-end testing
      - name: Install Playwright
        run: npx playwright install --with-deps

      # Run end-to-end tests
      - name: Run E2E Tests
        run: pnpm run test:e2e

      # Upload test results as artifacts
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results
          path: test-results/
          retention-days: 30
